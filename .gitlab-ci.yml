image: python:3.6

before_script:
  - echo $HOME
  - VERSION=`cat angreal/VERSION`
  - pip install virtualenv
  - virtualenv ~/.venv/angreal
  - source ~/.venv/angreal/bin/activate
  - pip install .[dev]


stages:
  - test
  - release
  - post_release
  - pages

unit-test:
  image: python:3.6
  stage: test
  script:
    - export GITLAB_CI=1
    - doit tests
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  except:
    - tags

functional-test:
  image: python:3.6
  stage: test
  script:
     - doit functional_tests
  allow_failure: false
  except:
    - tags

install-test:
  image: python:3.6
  stage: test
  script:
    - pip install .
  allow_failure: false
  except:
    - tags

init_gitlab_python:
  image: python:3.6
  stage: test
  script:
    - pip install .
    - angreal init gitlab_python --no-input --no_pypi --no_gitlab
  allow_failure: true
  except:
    - tags


init_data_science_project:
  image: python:3.6
  stage: test
  script:
    - pip install .
    - angreal init data_science_project --no-input
  allow_failure: true
  except:
    - tags

init_presentation:
  image: python:3.6
  stage: test
  script:
    - pip install .
    - angreal init presentation --no-input
  allow_failure: true
  except:
    - tags


init_meeting_minutes:
  image: python:3.6
  stage: test
  script:
    - pip install .
    - angreal init meeting-minutes --no-input
  allow_failure: true
  except:
    - tags

init_template:
  image: python:3.6
  stage: test
  script:
    - pip install .
    - angreal init template --no-input
  allow_failure: true
  except:
    - tags

release-test:
  image: python:3.6
  stage: release
  script:
    - pip install twine
    - echo "[distutils]" >> ~/.pypirc
    - echo "index-servers=" >> ~/.pypirc
    - echo "  testpypi" >> ~/.pypirc
    - echo "[testpypi]" >> ~/.pypirc
    - echo 'repository=https://test.pypi.org/legacy/' >> ~/.pypirc
    - echo 'username='$PYPI_USER >> ~/.pypirc
    - echo 'password='$PYPI_PASSWORD >> ~/.pypirc
    - python setup.py check sdist bdist_wheel
    - twine upload --repository testpypi dist/*
    - pip install --index-url https://test.pypi.org/simple/ angreal
    - echo "" > ~/.pypirc && rm ~/.pypirc
  allow_failure: true
  only:
    - tags

release:
  image: python:3.6
  stage: release
  before_script:
    - VERSION=`cat angreal/VERSION`
    - if ! [[ "$CI_BUILD_TAG" = "$VERSION" ]]; then echo "$VERSION does not match $CI_BUILD_TAG"; exit -1 ; fi
  script:
    - pip install twine
    - pip install .[dev]
    - echo "[server-login]" >> ~/.pypirc
    - echo "repository=https://pypi.python.org/pypi" >> ~/.pypirc
    - echo "username="$PYPI_USER >> ~/.pypirc
    - echo "password="$PYPI_PASSWORD >> ~/.pypirc
    - python setup.py check sdist bdist_wheel
    - twine upload --repository pypi dist/*
    - echo "" > ~/.pypirc && rm ~/.pypirc
  only:
    - tags
  when:
    manual

cleanup_release:
  stage: release
  when: always
  script:
    - rm -vf ~/.pypirc
  only:
    - tags

trigger_docs:
  stage: pages
  variables:
    APP_PROJECT_ID : 12432876
  before_script:
    - echo "No need to setup"
  script:
    - curl --request POST --form "token=$GITLAB_TRIGGER_TOKEN" --form ref=master https://gitlab.com/api/v4/projects/$APP_PROJECT_ID/trigger/pipeline
  only:
    - master



  





init_gitlab_python:
  image: python:3
  stage: post_release
  before_script:
    - echo ""
  script:
    - pip install angreal
    - angreal init gitlab_python --no-input --no_pypi --no_gitlab
  allow_failure: true
  only:
    - tags


init_data_science_project:
  image: python:3
  stage: post_release
  before_script:
    - echo ""
  script:
    - pip install angreal
    - angreal init data_science_project --no-input
  allow_failure: true
  only:
    - tags

init_presentation:
  image: python:3
  stage: post_release
  before_script:
    - echo ""
  script:
    - pip install angreal
    - angreal init presentation --no-input
  allow_failure: true
  only:
    - tags


init_meeting_minutes:
  image: python:3
  stage: post_release
  before_script:
    - echo ""
  script:
    - pip install angreal
    - angreal init meeting-minutes --no-input
  allow_failure: true
  only:
    - tags

init_template:
  image: python:3
  stage: post_release
  before_script:
    - echo ""
  script:
    - pip install angreal
    - angreal init template --no-input
  allow_failure: true
  only:
    - tags






