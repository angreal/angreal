name: "Angreal Release"

# on:
#   release:
#     types: [published]

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PACKAGE_NAME: angreal
  PYTHON_VERSION: "3.7" # to build abi3 wheels
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10

jobs:
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin
      - name: Build
        run: brew info openssl@1.1 && cargo build --release
      - name: Build wheels - x86_64
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: -i python --release --out dist --sdist
      - name: Install built wheel - x86_64
        run: |
          pip install angreal --no-index --find-links dist --force-reinstall
      - name: Build wheels - universal2
        if: ${{ matrix.python-version >= '3.8' || contains(fromJson('["3.10", "3.11"]'), matrix.python-version) }}
        uses: PyO3/maturin-action@v1
        with:
          args: -i python --release --universal2 --out dist
      - name: Install built wheel - universal2
        if: ${{ matrix.python-version >= '3.8' || contains(fromJson('["3.10", "3.11"]'), matrix.python-version) }}
        run: |
          pip install angreal --no-index --find-links dist --force-reinstall
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   needs:
  #     - macos-universal
  #     - macos-x86_64
  #     - windows
  #     - linux
  #     - linux-cross
  #     - musllinux
  #     - musllinux-cross
  #     - pypy
  #   if: "startsWith(github.ref, 'refs/tags/')"
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: wheels
  #     - uses: actions/setup-python@v4
  #     - name: Publish to PyPi
  #       env:
  #         TWINE_USERNAME: __token__
  #         TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
  #       run: |
  #         pip install --upgrade twine
  #         twine upload --skip-existing *
