---
name: "Angreal Tests"

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - main
      - master
      - dev
      - 'feat/**'  # Feature branches
      - 'fix/**'   # Bugfix branches
      - 'cicd-*'   # Special trigger for CI/CD testing branches
      - 'cicd/**'  # Alternative pattern for nested cicd branches
  pull_request:
    branches:
      - main
      - master
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  RUST_BACKTRACE: full
  RUST_VERSION: "1.85.1"  # Latest stable Rust version
  # Control production uploads based on branch
  IS_CICD_BRANCH: ${{ startsWith(github.ref, 'refs/heads/cicd') }}
  # Use test repositories for cicd branches
  CARGO_REGISTRY: ${{ startsWith(github.ref, 'refs/heads/cicd') && 'test-crates-io' || 'crates-io' }}
  PYPI_REPOSITORY: ${{ startsWith(github.ref, 'refs/heads/cicd') && 'testpypi' || 'pypi' }}
  GIT_TRACE: 1
  GIT_TRACE_PACKET: 1
  GIT_TRACE_PERFORMANCE: 1

jobs:

  pre-commit:
    name: "Linters"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt, clippy
      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --all-files
      - name: Spell Check
        uses: crate-ci/typos@v1.16.26
        with:
          files: ./src
      - name: Spell Check
        uses: crate-ci/typos@v1.16.26
        with:
          files: ./docs/content
      - name: Spell Check
        uses: crate-ci/typos@v1.16.26
        with:
          files: ./python
      - name: Spell Check
        uses: crate-ci/typos@v1.16.26
        with:
          files: ./py_tests
      - name: Spell Check
        uses: crate-ci/typos@v1.16.26
        with:
          files: ./tests

  build-verification:
    name: "Build Verify"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - uses: Swatinem/rust-cache@v2
      - run: cargo build --all

  linux-tests:
    name: "Linux Tests"
    runs-on: ubuntu-latest
    needs: [pre-commit, build-verification]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - uses: Swatinem/rust-cache@v2
      - uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.GH_KNOWN_HOSTS }}
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install UV manually
        run: curl -LsSf https://astral.sh/uv/install.sh | sh && export PATH="$HOME/.local/bin:$PATH"
      - run: pip install maturin pytest
      - run: maturin build
      - run: pip install .
      - name: Unit Tests
        run: |
          angreal test rust --unit-only
          angreal test python
          angreal --version
      - name: Integration Tests
        continue-on-error: true
        run: angreal test rust --integration-only
      - name: Functional Tests
        continue-on-error: true
        run: |
          git clean -fdx
          git reset --hard
          rm -rf .angreal
          angreal init --force --defaults https://github.com/angreal/angreal_test_template


  windows-tests:
    name: "Windows Tests"
    runs-on: windows-latest
    needs: [pre-commit, build-verification]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - uses: Swatinem/rust-cache@v2
      - uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.GH_KNOWN_HOSTS }}
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install UV manually
        run: |
          irm https://astral.sh/uv/install.ps1 | iex
          $env:PATH = "$env:USERPROFILE\.local\bin;$env:PATH"
      - run: pip install maturin pytest
      - run: maturin build
      - run: pip install .
      - name: Unit Tests
        run: |
          angreal test rust --unit-only
          angreal test python
          angreal --version
      - name: Integration Tests
        continue-on-error: true
        run: angreal test rust --integration-only
      - name: Functional Tests
        continue-on-error: true
        run: |
          git clean -fdx
          git reset --hard
          Remove-Item -Recurse -Force .angreal -ErrorAction SilentlyContinue
          angreal init --force --defaults https://github.com/angreal/angreal_test_template


  macos-tests:
    name: "OSX Tests"
    runs-on: macos-13
    needs: [pre-commit, build-verification]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - uses: Swatinem/rust-cache@v2
      - uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.GH_KNOWN_HOSTS }}
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install UV manually
        run: curl -LsSf https://astral.sh/uv/install.sh | sh && export PATH="$HOME/.local/bin:$PATH"
      - run: pip install maturin pytest
      - run: maturin build
      - run: pip install .
      - name: Unit Tests
        run: |
          angreal test rust --unit-only
          angreal test python
          angreal --version
      - name: Integration Tests
        continue-on-error: true
        run: angreal test rust --integration-only
      - name: Functional Tests
        continue-on-error: true
        run: |
          git clean -fdx
          git reset --hard
          rm -rf .angreal
          angreal init --force --defaults https://github.com/angreal/angreal_test_template
